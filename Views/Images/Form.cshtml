@using VTSV.Models
@model Image
<script>
    function updateImage() {
        var val = $('#Name option:selected').val();
        if (val === undefined) val = $('#Name').val();
        $('#Image').attr('src', '/Images/GetFile/' + val);
        $('#autoDate').load('/Images/GetDateTaken/' + val, function () { if ($('#DateTaken').val() == '') $('#DateTaken').val($('#autoDate').text()); });
    }

    $(document).ready(function () {
        $('#Name').change(updateImage);
        updateImage();
    });
</script>
<div style="float: right;">
    <img src="#" id="Image" alt="Image" />
</div>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Image</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @(Model == null ? Html.DropDownListFor(model => model.Name, new SelectList(ViewBag.AllImages)) : Html.TextBoxFor(model => model.Name))
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateTaken)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateTaken)
            (found <span id="autoDate"></span>)
            @Html.ValidationMessageFor(model => model.DateTaken)
        </div>
        @foreach (TagType type in ViewBag.TagTypes)
        {
            <div style="float: left">
                <b>@type.Name</b><br />
                @foreach (var tag in type.Tags.OrderBy(t => t.Name))
                {
                    @Html.CheckBox("tag" + tag.ID, Model != null && Model.Tags != null && Model.Tags.Select(t => t.ID).Contains(tag.ID)) @tag.Name<br />
                }
                @Html.TextBox("new" + type.ID)
                <br />
            </div>
        }
        <p>
            <input type="submit" value="Submit" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "List")
</div>
